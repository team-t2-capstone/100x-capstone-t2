-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.bulk_summarization_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  job_name character varying NOT NULL,
  session_filters jsonb DEFAULT '{}'::jsonb,
  template_id uuid,
  summary_type character varying DEFAULT 'detailed'::character varying,
  status character varying DEFAULT 'pending'::character varying,
  total_sessions integer DEFAULT 0,
  processed_sessions integer DEFAULT 0,
  failed_sessions integer DEFAULT 0,
  progress_percentage real DEFAULT 0.0,
  estimated_completion timestamp with time zone,
  error_message text,
  output_format character varying DEFAULT 'json'::character varying,
  download_url character varying,
  created_at timestamp with time zone DEFAULT now(),
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  expires_at timestamp with time zone,
  CONSTRAINT bulk_summarization_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT bulk_summarization_jobs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT bulk_summarization_jobs_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.summary_templates(id)
);
CREATE TABLE public.clone_learning (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  clone_id uuid NOT NULL,
  user_id uuid NOT NULL,
  learned_preferences jsonb DEFAULT '{}'::jsonb,
  successful_patterns jsonb DEFAULT '{}'::jsonb,
  adaptive_traits jsonb DEFAULT '{}'::jsonb,
  communication_adjustments jsonb DEFAULT '{}'::jsonb,
  learning_confidence real DEFAULT 0.0,
  interaction_count integer DEFAULT 0,
  success_rate real DEFAULT 0.0,
  last_feedback_rating real,
  custom_system_prompt_additions text,
  personality_adjustments jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_learning_event timestamp with time zone,
  CONSTRAINT clone_learning_pkey PRIMARY KEY (id),
  CONSTRAINT clone_learning_clone_id_fkey FOREIGN KEY (clone_id) REFERENCES public.clones(id),
  CONSTRAINT clone_learning_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.clone_qa_data (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clone_id uuid NOT NULL UNIQUE,
  qa_data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT clone_qa_data_pkey PRIMARY KEY (id),
  CONSTRAINT clone_qa_data_clone_id_fkey FOREIGN KEY (clone_id) REFERENCES public.clones(id)
);
CREATE TABLE public.clones (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  creator_id uuid,
  name character varying NOT NULL,
  bio text,
  avatar_url character varying,
  category character varying NOT NULL,
  expertise_areas ARRAY DEFAULT '{}'::text[],
  languages ARRAY DEFAULT ARRAY['English'::text],
  base_price numeric NOT NULL,
  currency character varying DEFAULT 'USD'::character varying,
  personality_traits jsonb DEFAULT '{}'::jsonb,
  communication_style jsonb DEFAULT '{}'::jsonb,
  system_prompt text,
  temperature numeric DEFAULT 0.7,
  max_tokens integer DEFAULT 1000,
  is_published boolean DEFAULT false,
  is_active boolean DEFAULT true,
  total_sessions integer DEFAULT 0,
  total_earnings numeric DEFAULT 0.0,
  average_rating numeric DEFAULT 0.0,
  total_ratings integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  published_at timestamp with time zone,
  professional_title character varying,
  credentials_qualifications text,
  CONSTRAINT clones_pkey PRIMARY KEY (id),
  CONSTRAINT clones_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.conversation_memories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  clone_id uuid NOT NULL,
  session_id uuid,
  memory_summary text NOT NULL,
  key_points jsonb DEFAULT '[]'::jsonb,
  emotional_context jsonb DEFAULT '{}'::jsonb,
  topics_discussed ARRAY DEFAULT '{}'::text[],
  importance_score real DEFAULT 0.5,
  relevance_tags ARRAY DEFAULT '{}'::text[],
  embedding text,
  memory_type character varying DEFAULT 'conversation'::character varying,
  access_count integer DEFAULT 0,
  last_accessed timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  CONSTRAINT conversation_memories_pkey PRIMARY KEY (id),
  CONSTRAINT conversation_memories_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id),
  CONSTRAINT conversation_memories_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT conversation_memories_clone_id_fkey FOREIGN KEY (clone_id) REFERENCES public.clones(id)
);
CREATE TABLE public.creator_analytics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  creator_id uuid,
  clone_id uuid,
  date date NOT NULL,
  total_earnings numeric DEFAULT 0.0,
  sessions_count integer DEFAULT 0,
  total_duration_minutes integer DEFAULT 0,
  average_rating numeric DEFAULT 0.0,
  ratings_count integer DEFAULT 0,
  user_retention_rate numeric DEFAULT 0.0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT creator_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT creator_analytics_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.user_profiles(id),
  CONSTRAINT creator_analytics_clone_id_fkey FOREIGN KEY (clone_id) REFERENCES public.clones(id)
);
CREATE TABLE public.document_chunks (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid,
  content text NOT NULL,
  chunk_index integer NOT NULL,
  embedding USER-DEFINED,
  doc_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT document_chunks_pkey PRIMARY KEY (id),
  CONSTRAINT document_chunks_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clone_id uuid,
  title character varying NOT NULL,
  description character varying,
  file_name character varying NOT NULL,
  file_path character varying NOT NULL,
  file_type character varying NOT NULL,
  file_size_bytes integer NOT NULL,
  processing_status character varying DEFAULT 'pending'::character varying CHECK (processing_status::text = ANY (ARRAY['pending'::character varying, 'processing'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  processing_error text,
  chunk_count integer DEFAULT 0,
  tags ARRAY DEFAULT '{}'::text[],
  doc_metadata jsonb DEFAULT '{}'::jsonb,
  upload_date timestamp with time zone DEFAULT now(),
  processed_date timestamp with time zone,
  CONSTRAINT documents_pkey PRIMARY KEY (id),
  CONSTRAINT documents_clone_id_fkey FOREIGN KEY (clone_id) REFERENCES public.clones(id)
);
CREATE TABLE public.knowledge_entries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clone_id uuid,
  title character varying NOT NULL,
  content text NOT NULL,
  category character varying,
  embedding USER-DEFINED,
  tags ARRAY DEFAULT '{}'::text[],
  doc_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT knowledge_entries_pkey PRIMARY KEY (id),
  CONSTRAINT knowledge_entries_clone_id_fkey FOREIGN KEY (clone_id) REFERENCES public.clones(id)
);
CREATE TABLE public.memory_policies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  policy_name character varying NOT NULL UNIQUE,
  retention_days integer DEFAULT 30,
  max_context_tokens integer DEFAULT 4000,
  importance_threshold real DEFAULT 0.3,
  compression_algorithm character varying DEFAULT 'summary'::character varying,
  archival_threshold_days integer DEFAULT 90,
  auto_cleanup_enabled boolean DEFAULT true,
  max_conversation_memories integer DEFAULT 50,
  semantic_similarity_threshold real DEFAULT 0.7,
  memory_decay_factor real DEFAULT 0.95,
  policy_config jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  applies_to_user_tier character varying DEFAULT 'all'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT memory_policies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.memory_usage_stats (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  date timestamp with time zone NOT NULL,
  total_memories_stored integer DEFAULT 0,
  context_retrievals integer DEFAULT 0,
  memory_searches_performed integer DEFAULT 0,
  average_retrieval_time_ms real DEFAULT 0.0,
  total_memory_size_kb real DEFAULT 0.0,
  compressed_memories_count integer DEFAULT 0,
  archived_memories_count integer DEFAULT 0,
  memory_hit_rate real DEFAULT 0.0,
  context_relevance_score real DEFAULT 0.0,
  user_satisfaction_score real DEFAULT 0.0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT memory_usage_stats_pkey PRIMARY KEY (id),
  CONSTRAINT memory_usage_stats_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  session_id uuid,
  sender_type character varying NOT NULL CHECK (sender_type::text = ANY (ARRAY['user'::character varying, 'ai'::character varying]::text[])),
  content text NOT NULL,
  sources jsonb DEFAULT '[]'::jsonb,
  context_used text,
  cost_increment numeric DEFAULT 0.0,
  tokens_used integer DEFAULT 0,
  attachments jsonb DEFAULT '[]'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id)
);
CREATE TABLE public.refresh_tokens (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  token_hash character varying NOT NULL,
  expires_at timestamp with time zone NOT NULL,
  is_revoked boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT refresh_tokens_pkey PRIMARY KEY (id),
  CONSTRAINT refresh_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.session_summaries (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  session_id uuid,
  summary_text text NOT NULL,
  key_insights jsonb DEFAULT '[]'::jsonb,
  action_items jsonb DEFAULT '[]'::jsonb,
  recommendations jsonb DEFAULT '[]'::jsonb,
  next_session_topics jsonb DEFAULT '[]'::jsonb,
  summary_type character varying DEFAULT 'detailed'::character varying CHECK (summary_type::text = ANY (ARRAY['brief'::character varying, 'detailed'::character varying, 'action_items'::character varying]::text[])),
  confidence_score numeric DEFAULT 0.0,
  generated_at timestamp with time zone DEFAULT now(),
  emotional_tone character varying,
  main_topics ARRAY DEFAULT '{}'::text[],
  user_satisfaction_indicators jsonb DEFAULT '{}'::jsonb,
  learning_outcomes jsonb DEFAULT '[]'::jsonb,
  conversation_quality_score real DEFAULT 0.0,
  template_id uuid,
  word_count integer DEFAULT 0,
  processing_time_ms integer DEFAULT 0,
  ai_model_used character varying DEFAULT 'gpt-4.1'::character varying,
  prompt_version character varying DEFAULT 'v1.0'::character varying,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT session_summaries_pkey PRIMARY KEY (id),
  CONSTRAINT session_summaries_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.summary_templates(id),
  CONSTRAINT fk_session_summaries_template FOREIGN KEY (template_id) REFERENCES public.summary_templates(id),
  CONSTRAINT session_summaries_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.sessions(id)
);
CREATE TABLE public.sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  clone_id uuid,
  session_type character varying DEFAULT 'chat'::character varying CHECK (session_type::text = ANY (ARRAY['chat'::character varying, 'voice'::character varying, 'video'::character varying]::text[])),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'paused'::character varying, 'ended'::character varying]::text[])),
  demo_mode boolean DEFAULT false,
  start_time timestamp with time zone DEFAULT now(),
  end_time timestamp with time zone,
  duration_minutes integer DEFAULT 0,
  rate_per_minute numeric NOT NULL,
  total_cost numeric DEFAULT 0.0,
  message_count integer DEFAULT 0,
  user_rating integer CHECK (user_rating >= 1 AND user_rating <= 5),
  user_feedback text,
  session_metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sessions_pkey PRIMARY KEY (id),
  CONSTRAINT sessions_clone_id_fkey FOREIGN KEY (clone_id) REFERENCES public.clones(id),
  CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.summary_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  template_type character varying NOT NULL,
  prompt_template text NOT NULL,
  output_format jsonb DEFAULT '{}'::jsonb,
  max_length integer DEFAULT 500,
  include_insights boolean DEFAULT true,
  include_action_items boolean DEFAULT true,
  include_recommendations boolean DEFAULT true,
  include_emotional_analysis boolean DEFAULT false,
  is_public boolean DEFAULT false,
  creator_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT summary_templates_pkey PRIMARY KEY (id),
  CONSTRAINT summary_templates_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.user_analytics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  date date NOT NULL,
  sessions_count integer DEFAULT 0,
  messages_sent integer DEFAULT 0,
  total_duration_minutes integer DEFAULT 0,
  total_spent numeric DEFAULT 0.0,
  documents_uploaded integer DEFAULT 0,
  knowledge_entries_added integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT user_analytics_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.user_memory_contexts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  context_summary text,
  key_preferences jsonb DEFAULT '{}'::jsonb,
  communication_patterns jsonb DEFAULT '{}'::jsonb,
  topics_of_interest ARRAY DEFAULT '{}'::text[],
  personality_insights jsonb DEFAULT '{}'::jsonb,
  total_interactions integer DEFAULT 0,
  context_version integer DEFAULT 1,
  confidence_score real DEFAULT 0.0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_interaction timestamp with time zone,
  CONSTRAINT user_memory_contexts_pkey PRIMARY KEY (id),
  CONSTRAINT user_memory_contexts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email character varying NOT NULL UNIQUE,
  full_name character varying NOT NULL,
  avatar_url character varying,
  role character varying DEFAULT 'user'::character varying CHECK (role::text = ANY (ARRAY['user'::character varying, 'creator'::character varying, 'admin'::character varying]::text[])),
  is_active boolean DEFAULT true,
  is_verified boolean DEFAULT false,
  hashed_password character varying NOT NULL,
  preferences jsonb DEFAULT '{}'::jsonb,
  timezone character varying DEFAULT 'UTC'::character varying,
  language character varying DEFAULT 'en'::character varying,
  subscription_tier character varying DEFAULT 'free'::character varying CHECK (subscription_tier::text = ANY (ARRAY['free'::character varying, 'pro'::character varying, 'enterprise'::character varying]::text[])),
  credits_remaining integer DEFAULT 100,
  total_spent numeric DEFAULT 0.0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_login timestamp with time zone,
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id)
);